class Solution {
public:
    bool canBeValid(string s, string locked) {
        int len = s.length();
        if (len % 2 != 0)
            return false;

        int open = 0, flexible = 0;
        for (int i = 0; i < len; i++) {
            if (locked[i] == '0') {
                flexible++;
            } else if (s[i] == '(') {
                open++;
            } else {
                if (open > 0) {
                    open--;
                } else if (flexible > 0) {
                    flexible--;
                } else {
                    return false;
                }
            }
        }

        int close = 0;
        flexible = 0;
        for (int i = len - 1; i >= 0; i--) {
            if (locked[i] == '0') {
                flexible++;
            } else if (s[i] == ')') {
                close++;
            } else {
                if (close > 0) {
                    close--;
                } else if (flexible > 0) {
                    flexible--;
                } else {
                    return false;
                }
            }
        }

        return true;
    }
};
