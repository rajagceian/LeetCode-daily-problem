class Solution {
public:
    int minimizedMaximum(int n, vector<int>& quantities) {
        int low = 1;
        int len = quantities.size();
        int high = *max_element(quantities.begin(), quantities.end());  // max ele as higher bound
        int ans = INT_MAX;
        while (low <= high) {
            int mid = low + (high - low) / 2;
            int x = 0;
            int i = 0;
            while (i < len) {
                x += (quantities[i] + mid-1) / mid;
                i++;
            }
            if (x <= n) {
                ans = min(ans, mid);
                high = mid - 1;
            } else
                low = mid + 1;
        }
        return ans;
    }
};
